{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport loadingReducer from \"./reducers/loadingReducers\";\nimport messageReducer from \"./reducers/messageReducers\";\nimport categoryReducer from \"./reducers/categoryReducers\";\nconst reducer = combineReducers({\n  //loading reducer\n  loading: loadingReducer,\n  messages: messageReducer,\n  categories: categoryReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/shivaworkstation/Documents/MERN STACK/ecommerce/client/src/redux/store.js"],"names":["combineReducers","applyMiddleware","createStore","thunk","composeWithDevTools","loadingReducer","messageReducer","categoryReducer","reducer","loading","messages","categories","initialState","middleware","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC9B;AACAS,EAAAA,OAAO,EAAEJ,cAFqB;AAG9BK,EAAAA,QAAQ,EAAEJ,cAHoB;AAI9BK,EAAAA,UAAU,EAAEJ;AAJkB,CAAD,CAA/B;AAOA,MAAMK,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACV,KAAD,CAAnB;AAEA,MAAMW,KAAK,GAAGZ,WAAW,CACvBM,OADuB,EAEvBI,YAFuB,EAGvBR,mBAAmB,CAACH,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { combineReducers, applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport loadingReducer from \"./reducers/loadingReducers\";\nimport messageReducer from \"./reducers/messageReducers\";\nimport categoryReducer from \"./reducers/categoryReducers\";\n\nconst reducer = combineReducers({\n  //loading reducer\n  loading: loadingReducer,\n  messages: messageReducer,\n  categories: categoryReducer,\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { START_LOADING, STOP_LOADING } from \"../constants/loadingConstants\";\nimport { SHOW_ERROR_MESSAGE } from \"../constants/messageConstants\";\nimport { GET_CATEGORIES } from \"../constants/categoryConstants\";\nimport axios from \"axios\";\nexport const getCategories = () => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const response = await axios.get(\"/api/category\");\n    dispatch({\n      type: STOP_LOADING\n    });\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: response.data.categories\n    });\n  } catch (err) {\n    console.log(\"getCategories api error: \", err);\n    dispatch({\n      type: STOP_LOADING\n    });\n    dispatch({\n      type: SHOW_ERROR_MESSAGE,\n      payload: err.response.data.errorMessage\n    });\n  }\n};\nexport const createCategory = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    dispatch({\n      type: START_LOADING\n    });\n    const response = await axios.post(\"/api/category\", formData, config);\n    dispatch({\n      type: STOP_LOADING\n    });\n    dispatch({\n      type: SHOW_SUCCESS_MESSAGE,\n      payload: response.data.successMessage\n    });\n    dispatch({\n      type: CREATE_CATEGORY,\n      payload: response.data.category\n    });\n  } catch (err) {\n    console.log(\"createCategory api error: \", err);\n    dispatch({\n      type: STOP_LOADING\n    });\n    dispatch({\n      type: SHOW_ERROR_MESSAGE,\n      payload: err.response.data.errorMessage\n    });\n  }\n};","map":{"version":3,"sources":["/home/shivaworkstation/Documents/MERN STACK/ecommerce/client/src/redux/actions/categoryActions.js"],"names":["START_LOADING","STOP_LOADING","SHOW_ERROR_MESSAGE","GET_CATEGORIES","axios","getCategories","dispatch","type","response","get","payload","data","categories","err","console","log","errorMessage","createCategory","formData","config","headers","post","SHOW_SUCCESS_MESSAGE","successMessage","CREATE_CATEGORY","category"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,+BAA5C;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACA,UAAMQ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAK,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,cAAR;AAAwBO,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAA/C,KAAD,CAAR;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,GAAzC;AACAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAK,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,kBADC;AAEPQ,MAAAA,OAAO,EAAEG,GAAG,CAACL,QAAJ,CAAaG,IAAb,CAAkBK;AAFpB,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc,MAAOZ,QAAP,IAAoB;AAC9D,MAAI;AACF,UAAMa,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACA,UAAMQ,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,IAAN,CAAW,eAAX,EAA4BH,QAA5B,EAAsCC,MAAtC,CAAvB;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAK,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEe,oBADC;AAEPZ,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcY;AAFhB,KAAD,CAAR;AAIAjB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEiB,eAAR;AAAyBd,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcc;AAAhD,KAAD,CAAR;AACD,GAdD,CAcE,OAAOZ,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAA1C;AACAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAK,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,kBADC;AAEPQ,MAAAA,OAAO,EAAEG,GAAG,CAACL,QAAJ,CAAaG,IAAb,CAAkBK;AAFpB,KAAD,CAAR;AAID;AACF,CAvBM","sourcesContent":["import { START_LOADING, STOP_LOADING } from \"../constants/loadingConstants\";\nimport { SHOW_ERROR_MESSAGE } from \"../constants/messageConstants\";\nimport { GET_CATEGORIES } from \"../constants/categoryConstants\";\nimport axios from \"axios\";\n\nexport const getCategories = () => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const response = await axios.get(\"/api/category\");\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: GET_CATEGORIES, payload: response.data.categories });\n  } catch (err) {\n    console.log(\"getCategories api error: \", err);\n    dispatch({ type: STOP_LOADING });\n    dispatch({\n      type: SHOW_ERROR_MESSAGE,\n      payload: err.response.data.errorMessage,\n    });\n  }\n};\n\nexport const createCategory = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    dispatch({ type: START_LOADING });\n    const response = await axios.post(\"/api/category\", formData, config);\n    dispatch({ type: STOP_LOADING });\n    dispatch({\n      type: SHOW_SUCCESS_MESSAGE,\n      payload: response.data.successMessage,\n    });\n    dispatch({ type: CREATE_CATEGORY, payload: response.data.category });\n  } catch (err) {\n    console.log(\"createCategory api error: \", err);\n    dispatch({ type: STOP_LOADING });\n    dispatch({\n      type: SHOW_ERROR_MESSAGE,\n      payload: err.response.data.errorMessage,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}